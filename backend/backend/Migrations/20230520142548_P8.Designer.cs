// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.DbContexts;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(DbInfoContext))]
    [Migration("20230520142548_P8")]
    partial class P8
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("backend.Entities.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageString")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Exercise");
                });

            modelBuilder.Entity("backend.Entities.ExerciseWorkoutRel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ExerciseId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("NumberOfReps")
                        .HasColumnType("REAL");

                    b.Property<float>("NumberOfSets")
                        .HasColumnType("REAL");

                    b.Property<float>("Weight")
                        .HasColumnType("REAL");

                    b.Property<int?>("WorkoutId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("ExerciseWorkoutRel");
                });

            modelBuilder.Entity("backend.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("backend.Entities.UserData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Height")
                        .HasColumnType("REAL");

                    b.Property<float>("TargetWeight")
                        .HasColumnType("REAL");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserDatas");
                });

            modelBuilder.Entity("backend.Entities.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserDataId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WorkoutDuration")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("date")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.HasIndex("UserDataId");

                    b.ToTable("Workout");
                });

            modelBuilder.Entity("backend.Entities.ExerciseWorkoutRel", b =>
                {
                    b.HasOne("backend.Entities.Exercise", "Exercise")
                        .WithMany("ExerciseWorkoutRels")
                        .HasForeignKey("ExerciseId");

                    b.HasOne("backend.Entities.Workout", "Workout")
                        .WithMany("ExerciseWorkoutRels")
                        .HasForeignKey("WorkoutId");

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("backend.Entities.UserData", b =>
                {
                    b.HasOne("backend.Entities.User", "User")
                        .WithOne("UserData")
                        .HasForeignKey("backend.Entities.UserData", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("backend.Entities.Workout", b =>
                {
                    b.HasOne("backend.Entities.UserData", "UserData")
                        .WithMany("Workouts")
                        .HasForeignKey("UserDataId");

                    b.Navigation("UserData");
                });

            modelBuilder.Entity("backend.Entities.Exercise", b =>
                {
                    b.Navigation("ExerciseWorkoutRels");
                });

            modelBuilder.Entity("backend.Entities.User", b =>
                {
                    b.Navigation("UserData")
                        .IsRequired();
                });

            modelBuilder.Entity("backend.Entities.UserData", b =>
                {
                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("backend.Entities.Workout", b =>
                {
                    b.Navigation("ExerciseWorkoutRels");
                });
#pragma warning restore 612, 618
        }
    }
}
